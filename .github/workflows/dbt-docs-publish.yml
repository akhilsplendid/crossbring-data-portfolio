name: Crossbring dbt Docs Publish

on:
  workflow_dispatch:
  push:
    branches: [ main, master ]
    paths:
      - '01-warehouse-dbt/**'

jobs:
  publish-docs:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    defaults:
      run:
        working-directory: 01-warehouse-dbt
    env:
      HAS_SNOWFLAKE: ${{ secrets.SNOWFLAKE_ACCOUNT != '' && secrets.SNOWFLAKE_USER != '' && secrets.SNOWFLAKE_PASSWORD != '' && secrets.SNOWFLAKE_ROLE != '' && secrets.SNOWFLAKE_WAREHOUSE != '' && secrets.SNOWFLAKE_DATABASE != '' && secrets.SNOWFLAKE_SCHEMA != '' }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dbt
        run: |
          python -m pip install --upgrade pip
          pip install dbt-core dbt-snowflake
      - name: Configure dbt profile
        if: ${{ env.HAS_SNOWFLAKE == 'true' }}
        run: |
          mkdir -p ~/.dbt
          cat > ~/.dbt/profiles.yml <<'YAML'
          crossbring:
            target: ci
            outputs:
              ci:
                type: snowflake
                account: ${{ secrets.SNOWFLAKE_ACCOUNT }}
                user: ${{ secrets.SNOWFLAKE_USER }}
                password: ${{ secrets.SNOWFLAKE_PASSWORD }}
                role: ${{ secrets.SNOWFLAKE_ROLE }}
                warehouse: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
                database: ${{ secrets.SNOWFLAKE_DATABASE }}
                schema: ${{ secrets.SNOWFLAKE_SCHEMA }}
                threads: 4
                client_session_keep_alive: false
          YAML
      - run: dbt deps
      - name: Build docs with warehouse
        if: ${{ env.HAS_SNOWFLAKE == 'true' }}
        run: |
          dbt seed --full-refresh
          dbt run
          dbt test
          dbt docs generate
      - name: Build manifest only (no warehouse)
        if: ${{ env.HAS_SNOWFLAKE != 'true' }}
        run: dbt parse
      - name: Publish to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: 01-warehouse-dbt/target
          destination_dir: dbt-docs
