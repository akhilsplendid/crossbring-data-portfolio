name: Crossbring dbt Freshness

on:
  schedule:
    - cron: '*/30 * * * *'
  workflow_dispatch:

jobs:
  freshness:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: crossbring-data-portfolio/01-warehouse-dbt
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dbt
        run: |
          python -m pip install --upgrade pip
          pip install dbt-core dbt-snowflake
      - name: Configure dbt profile
        run: |
          mkdir -p ~/.dbt
          cat > ~/.dbt/profiles.yml <<'YAML'
          crossbring:
            target: ci
            outputs:
              ci:
                type: snowflake
                account: ${{ secrets.SNOWFLAKE_ACCOUNT }}
                user: ${{ secrets.SNOWFLAKE_USER }}
                password: ${{ secrets.SNOWFLAKE_PASSWORD }}
                role: ${{ secrets.SNOWFLAKE_ROLE }}
                warehouse: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
                database: ${{ secrets.SNOWFLAKE_DATABASE }}
                schema: ${{ secrets.SNOWFLAKE_SCHEMA }}
                threads: 4
                client_session_keep_alive: false
          YAML
      - name: dbt source freshness
        run: dbt source freshness --output json
      - name: Upload freshness report
        uses: actions/upload-artifact@v4
        with:
          name: dbt-sources
          path: crossbring-data-portfolio/01-warehouse-dbt/target/sources.json
      - name: Fail on freshness errors
        run: |
          python - << 'PY'
          import json,sys
          with open('target/sources.json') as f:
              data=json.load(f)
          errors=[s for s in data.get('results',[]) if s.get('max_loaded_at_time') and s.get('status')=='error']
          warns=[s for s in data.get('results',[]) if s.get('status')=='warn']
          if errors or warns:
              print('Freshness issues:', {'errors':len(errors),'warns':len(warns)})
              sys.exit(1)
          print('Freshness OK')
          PY

